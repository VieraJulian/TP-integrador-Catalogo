<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TfY/gpblhoSmygEAAAAASUVORK5CYII=
</value>
  </data>
</root>